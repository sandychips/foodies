name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  # Run all CI tests
  run-tests:
    name: Run All Tests
    uses: ./.github/workflows/ci.yml
    secrets: inherit

  # Add PR comment with test results
  pr-comment:
    name: PR Comment with Results
    runs-on: ubuntu-latest
    needs: run-tests
    if: always()

    steps:
      - name: Create PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const summary = [
              '## üîç Test Results',
              '',
              `**Status:** ${context.payload.pull_request ? '‚úÖ Tests completed' : '‚ùå Tests failed'}`,
              '',
              '### Jobs Status:',
              `- Backend Tests: ${{ needs.run-tests.result }}`,
              `- Frontend Tests: ${{ needs.run-tests.result }}`,
              '',
              '### Next Steps:',
              '- Ensure all tests pass before merging',
              '- Review code changes carefully',
              '- Check for any breaking changes',
              '',
              `[View full workflow run](${context.payload.repository.html_url}/actions/runs/${context.runId})`
            ].join('\n');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

  # Code quality checks
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for large files
        run: |
          echo "Checking for files larger than 5MB..."
          large_files=$(find . -type f -size +5M -not -path "*/node_modules/*" -not -path "*/.git/*" || true)

          if [ -n "$large_files" ]; then
            echo "‚ö†Ô∏è Found large files:"
            echo "$large_files"
            echo "Consider using Git LFS for large files"
          else
            echo "‚úÖ No large files found"
          fi

      - name: Check for secrets
        run: |
          echo "Checking for potential secrets..."

          # Look for common secret patterns
          if grep -r -i "password\s*=\s*['\"]" . --include="*.js" --include="*.jsx" --exclude-dir=node_modules --exclude-dir=.git; then
            echo "‚ö†Ô∏è Found potential hardcoded passwords"
            echo "Please use environment variables instead"
            exit 1
          fi

          if grep -r "api[_-]?key\s*=\s*['\"][^'\"]*['\"]" . --include="*.js" --include="*.jsx" --exclude-dir=node_modules --exclude-dir=.git; then
            echo "‚ö†Ô∏è Found potential API keys"
            echo "Please use environment variables instead"
            exit 1
          fi

          echo "‚úÖ No obvious secrets found"

      - name: Check commit messages
        run: |
          echo "Checking commit message format..."
          git log --format=%s origin/${{ github.base_ref }}..${{ github.head_ref }} | while read message; do
            if [ ${#message} -gt 100 ]; then
              echo "‚ö†Ô∏è Commit message too long (>100 chars): $message"
            fi
          done
          echo "‚úÖ Commit messages checked"

  # Dependency security check
  security-check:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '18.x'

      - name: Backend security audit
        working-directory: ./backend
        run: |
          npm audit --audit-level=moderate || {
            echo "‚ö†Ô∏è Backend has security vulnerabilities"
            echo "Run 'npm audit fix' to resolve"
          }
        continue-on-error: true

      - name: Frontend security audit
        working-directory: ./frontend
        run: |
          npm audit --audit-level=moderate || {
            echo "‚ö†Ô∏è Frontend has security vulnerabilities"
            echo "Run 'npm audit fix' to resolve"
          }
        continue-on-error: true

  # PR size check
  pr-size-check:
    name: PR Size Check
    runs-on: ubuntu-latest

    steps:
      - name: Check PR size
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const additions = pr.additions;
            const deletions = pr.deletions;
            const total = additions + deletions;

            let label = '';
            let message = '';

            if (total < 100) {
              label = 'size/XS';
              message = '‚úÖ This is a small PR - easy to review!';
            } else if (total < 300) {
              label = 'size/S';
              message = '‚úÖ This is a small/medium PR';
            } else if (total < 600) {
              label = 'size/M';
              message = '‚ö†Ô∏è This is a medium-sized PR';
            } else if (total < 1000) {
              label = 'size/L';
              message = '‚ö†Ô∏è This is a large PR - consider breaking it down';
            } else {
              label = 'size/XL';
              message = '‚ùå This PR is very large! Please consider splitting it into smaller PRs';
            }

            console.log(`PR Size: ${total} lines (${additions} additions, ${deletions} deletions)`);
            console.log(message);

            // Add size label
            try {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: [label]
              });
            } catch (error) {
              console.log('Could not add label (labels may not be configured)');
            }